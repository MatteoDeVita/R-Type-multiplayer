@startuml


package Server {

    class ClientServerSide {
        boost::asio::ip::udp _endpoint
    }

    GameContainer --o ClientServerSide
    class GameContainer  {
        - std::vector<ClientServerSide> _clients
    }

    Server --o GameContainer
    class Server {
        - std::vector<GameContainer> _gameContainers
    }
}

namespace Client {
    class Client {

    }
}



namespace gameEngine_ns {

    GameEngine --o Client
    GameEngine --o Server
    class GameEngine {
        
    }
    

    namespace object_ns {
        enum options {
            MOVE,
            SHOOT,
            EXPLODE,
        }

        class Sprite {
            - sf::Texture *_texture
            + Sprite(const std::string filePath, std::vector<Rectangle> _rectanglePositionsOnImage)
        }
        
        Object -down-o Sprite
        Object -down-o options
        class Object {
            - Sprite *_sprite
            - geometry::Vector *_pos
            - const ? Sprite *_explodingSprite
            - Sprite *_shootingSprite
            - uint32 _options

            + Object(const std::string unique_name, const Sprite &sprite)
            + void setPosition(const geometry::Vector &position)
            + void addOption(cosnt options &option, const Sprite &sprite = nullptr)
            + void executeOption(const actions &action)
            + void executeOption(const actions &action, void (*callback)(Obejct *object))
        }
    }

          
    namespace geometry_ns {
        Vector -right-o Rectangle
        class Vector {
            - float _x
            - float _y

            + Vector(const float &x, const float &y)
            + Vector &get()
            + void setX(const float &x)
            + void setY(const float &y)
            + void set(const float &x, const float &y)
        }

        Rectangle --o gameEngine_ns.object_ns.Sprite
        class Rectangle {
            - Vector *_origin
            - Vector *_size

            + Rectangle(const Vector &origin, const Vector _size)
            + Rectangle(const float &left, const float &top, const float &width, const float &height)
            + void set(const Rectangle &rectangle)
            + void setOrigin(const Vector &origin)
            + void setSize(const Vector &size)
            + void setByPoints(const float &left, const float &top, const float &width, const float &height)
        }
    }

    namespace window_ns {

        Window --o gameEngine_ns.geometry_ns.Vector
        Window --o gameEngine_ns.object_ns.Object
        class Window {
            - sf::Window *_window

            + Window(const geometry.ns::Vector &size)
            + void addObject(const &object_ns::Object &object)
            + void display()
        }
    }
}

@enduml